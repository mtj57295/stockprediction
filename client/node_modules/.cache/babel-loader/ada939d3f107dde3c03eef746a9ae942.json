{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/TwitterResults.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateTwitterResults, clearTwitterResults } from '../actions/twitterresults';\nimport TwitterChart from './TwitterChart';\n\nconst TwitterResults = ({\n  company,\n  clearTwitterResults,\n  updateTwitterResults,\n  twitteresults: {\n    count,\n    negative,\n    neutral,\n    positive,\n    subjectivityAvg,\n    tweets,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    clearTwitterResults();\n    updateTwitterResults(company);\n  }, [company]);\n  const postings = tweets.map(tweet => {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Status: \", tweet.polarity), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"subjectivity: \", tweet.subjectivity), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Tweet:  \", tweet.tweet));\n  });\n  return React.createElement(\"div\", {\n    className: \"center-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, !loading && negative != null && neutral != null && positive != null ? React.createElement(TwitterChart, {\n    count: count,\n    negative: negative,\n    neutral: neutral,\n    positive: positive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), !loading && tweets != null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, postings) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nTwitterResults.propTypes = {\n  twitteresults: PropTypes.object.isRequired,\n  updateTwitterResults: PropTypes.func.isRequired,\n  clearTwitterResults: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  twitteresults: state.twitterresults\n});\n\nexport default connect(mapStateToProps, {\n  updateTwitterResults,\n  clearTwitterResults\n})(TwitterResults);","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/TwitterResults.js"],"names":["React","useEffect","useState","Link","Redirect","connect","PropTypes","updateTwitterResults","clearTwitterResults","TwitterChart","TwitterResults","company","twitteresults","count","negative","neutral","positive","subjectivityAvg","tweets","loading","postings","map","tweet","polarity","subjectivity","propTypes","object","isRequired","func","mapStateToProps","state","twitterresults"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,2BAA1D;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWH,EAAAA,mBAAX;AAAgCD,EAAAA,oBAAhC;AAAsDK,EAAAA,aAAa,EACxF;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA,eAAtC;AAAuDC,IAAAA,MAAvD;AAA+DC,IAAAA;AAA/D;AADqB,CAAD,KACyD;AAE7ElB,EAAAA,SAAS,CAAC,MAAM;AACbO,IAAAA,mBAAmB;AACnBD,IAAAA,oBAAoB,CAACI,OAAD,CAApB;AACF,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;AAMA,QAAMS,QAAQ,GAAGF,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAI;AAClC,WACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaA,KAAK,CAACC,QAAnB,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBD,KAAK,CAACE,YAAzB,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaF,KAAK,CAACA,KAAnB,CAHH,CADH;AAOF,GARgB,CAAjB;AAWA,SACG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAACH,OAAD,IAAYL,QAAQ,IAAI,IAAxB,IAAgCC,OAAO,IAAI,IAA3C,IAAmDC,QAAQ,IAAI,IAA/D,GAEE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEH,KAArB;AAA4B,IAAA,QAAQ,EAAEC,QAAtC;AAAgD,IAAA,OAAO,EAAEC,OAAzD;AAAkE,IAAA,QAAQ,EAAEC,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,GAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,CAACG,OAAD,IAAYD,MAAM,IAAI,IAAtB,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,QAAN,CAA9B,GAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN5D,CADH;AAUF,CA9BD;;AAgCAV,cAAc,CAACe,SAAf,GAA2B;AACxBb,EAAAA,aAAa,EAAEN,SAAS,CAACoB,MAAV,CAAiBC,UADR;AAExBpB,EAAAA,oBAAoB,EAAED,SAAS,CAACsB,IAAV,CAAeD,UAFb;AAGxBnB,EAAAA,mBAAmB,EAAEF,SAAS,CAACsB,IAAV,CAAeD;AAHZ,CAA3B;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC/BlB,EAAAA,aAAa,EAAEkB,KAAK,CAACC;AADU,CAAL,CAA7B;;AAIA,eAAe1B,OAAO,CAACwB,eAAD,EAAkB;AAAEtB,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,CAAlB,CAAP,CAAwEE,cAAxE,CAAf","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateTwitterResults, clearTwitterResults } from '../actions/twitterresults';\nimport TwitterChart from './TwitterChart';\n\nconst TwitterResults = ({ company, clearTwitterResults, updateTwitterResults, twitteresults:\n   { count, negative, neutral, positive, subjectivityAvg, tweets, loading}}) => {\n\n   useEffect(() => {\n      clearTwitterResults()\n      updateTwitterResults(company)\n   }, [company])\n\n\n   const postings = tweets.map(tweet => {\n      return (\n         <div className='card'>\n            <h3>Status: {tweet.polarity}</h3>\n            <p>subjectivity: { tweet.subjectivity}</p>\n            <p>Tweet:  { tweet.tweet}</p>\n         </div>\n      )\n   })\n\n\n   return (\n      <div className='center-container'>\n         {!loading && negative != null && neutral != null && positive != null ?\n         (\n            <TwitterChart count={count} negative={negative} neutral={neutral} positive={positive}/>\n         ) :\n         (<div></div>)}\n         {!loading && tweets != null ? (<div>{postings}</div>) : (<div></div>)}\n      </div>\n   )\n}\n\nTwitterResults.propTypes = {\n   twitteresults: PropTypes.object.isRequired,\n   updateTwitterResults: PropTypes.func.isRequired,\n   clearTwitterResults: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n   twitteresults: state.twitterresults\n});\n\nexport default connect(mapStateToProps, { updateTwitterResults, clearTwitterResults })(TwitterResults);\n"]},"metadata":{},"sourceType":"module"}