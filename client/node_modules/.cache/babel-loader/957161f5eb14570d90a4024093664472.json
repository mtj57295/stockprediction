{"ast":null,"code":"import _slicedToArray from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/Landing.js\";\nimport React, { useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateStockData } from '../actions/stockdata';\nimport StockChart from './StockChart';\n\nconst Landing = ({\n  updateStockData,\n  stockdata: {\n    x,\n    y,\n    line,\n    loading,\n    company_ticker,\n    name\n  }\n}) => {\n  const _useState = useState({\n    company: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  useEffect(() => {\n    updateStockData();\n  }, [0]);\n  return React.createElement(\"section\", {\n    className: \"landingPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"background-color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"center-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Stock Prediction and Analysis\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    placeholder: \"Search..\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    class: \"button\",\n    style: {\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Hover\"))), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" Company: \", name), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" NASDAQ: \", company_ticker), !loading && x != null && y != null && line != null ? React.createElement(StockChart, {\n    x: x,\n    y: y,\n    l: line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))));\n};\n\nLanding.propTypes = {\n  updateStockData: PropTypes.func.isRequired,\n  stockdata: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  stockdata: state.stockdata\n});\n\nexport default connect(mapStateToProps, {\n  updateStockData\n})(Landing);","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/Landing.js"],"names":["React","useEffect","Link","Redirect","connect","PropTypes","updateStockData","StockChart","Landing","stockdata","x","y","line","loading","company_ticker","name","useState","company","formData","setFormData","verticalAlign","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,sBAAhC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACF,EAAAA,eAAD;AAAkBG,EAAAA,SAAS,EAAE;AAACC,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,cAAtB;AAAsCC,IAAAA;AAAtC;AAA7B,CAAD,KAA+E;AAAA,oBAE1DC,QAAQ,CAAC;AACxCC,IAAAA,OAAO,EAAE;AAD+B,GAAD,CAFkD;AAAA;AAAA,QAEpFC,QAFoF;AAAA,QAE1EC,WAF0E;;AAO5FlB,EAAAA,SAAS,CAAC,MAAM;AACbK,IAAAA,eAAe;AACjB,GAFQ,EAEN,CAAC,CAAD,CAFM,CAAT;AAIA,SACC;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADH,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,WAAW,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACc,MAAAA,aAAa,EAAC;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAxD,CAFF,CAFN,EAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBL,IAAhB,CANH,EAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeD,cAAf,CAPH,EAQI,CAACD,OAAD,IAAYH,CAAC,IAAI,IAAjB,IAAyBC,CAAC,IAAI,IAA9B,IAAsCC,IAAI,IAAI,IAA9C,GAAsD,oBAAC,UAAD;AAAY,IAAA,CAAC,EAAEF,CAAf;AAAkB,IAAA,CAAC,EAAEC,CAArB;AAAwB,IAAA,CAAC,EAAEC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtD,GAA6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARjG,CADH,CADF,CADD;AAgBF,CA3BD;;AA6BAJ,OAAO,CAACa,SAAR,GAAoB;AACjBf,EAAAA,eAAe,EAAED,SAAS,CAACiB,IAAV,CAAeC,UADf;AAEjBd,EAAAA,SAAS,EAAEJ,SAAS,CAACmB,MAAV,CAAiBD;AAFX,CAApB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC/BjB,EAAAA,SAAS,EAAEiB,KAAK,CAACjB;AADc,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACqB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA8CE,OAA9C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateStockData } from '../actions/stockdata';\n\nimport StockChart from './StockChart'\n\nconst Landing = ({updateStockData, stockdata: {x, y, line, loading, company_ticker, name}}) => {\n\n   const [ formData, setFormData ] = useState({\n      company: '',\n\n   })\n\n   useEffect(() => {\n      updateStockData()\n   }, [0])\n\n   return (\n    <section className=\"landingPage\">\n      <div className='background-color'>\n         <div className='center-container'>\n            <h1>Stock Prediction and Analysis</h1>\n               <form>\n                 <input type=\"text\" name=\"search\" placeholder=\"Search..\"/>\n                 <button class=\"button\" style={{verticalAlign:'middle'}}><span>Hover</span></button>\n               </form>\n            <h6> Company: { name }</h6>\n            <h6> NASDAQ: { company_ticker }</h6>\n            {!loading && x != null && y != null && line != null ? (<StockChart x={x} y={y} l={line}/>) : (<div></div>)}\n         </div>\n      </div>\n    </section>\n   )\n}\n\nLanding.propTypes = {\n   updateStockData: PropTypes.func.isRequired,\n   stockdata: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n   stockdata: state.stockdata\n});\n\nexport default connect(mapStateToProps, { updateStockData })(Landing);\n"]},"metadata":{},"sourceType":"module"}