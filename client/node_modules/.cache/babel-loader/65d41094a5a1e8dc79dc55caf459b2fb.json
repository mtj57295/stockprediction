{"ast":null,"code":"import _defineProperty from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/Landing.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateStockData, clearStocks } from '../actions/stockdata';\nimport { findCompanies, clearCompanies } from '../actions/findcompanies';\nimport StockChart from './StockChart';\n\nconst Landing = ({\n  clearStocks,\n  clearCompanies,\n  updateStockData,\n  findCompanies,\n  stockdata: {\n    x,\n    y,\n    line,\n    loading,\n    company_ticker,\n    name\n  },\n  findcompanies: {\n    companyTicker,\n    loadingCompanies\n  }\n}) => {\n  const _useState = useState({\n    company: '',\n    prediction: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState('none'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stockDataBlock = _useState4[0],\n        setStockDataBlock = _useState4[1];\n\n  const company = formData.company,\n        prediction = formData.prediction;\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    clearCompanies();\n    findCompanies(company);\n    clearStocks();\n    setStockDataBlock('none');\n  };\n\n  useEffect(() => {\n    if (!loadingCompanies && companyTicker != null) {\n      updateStockData(companyTicker);\n      setStockDataBlock('block');\n    }\n  }, [loadingCompanies]);\n  return React.createElement(\"section\", {\n    className: \"landingPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"background-color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"center-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Stock Prediction and Analysis\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"company\",\n    value: company,\n    onChange: e => onChange(e),\n    placeholder: \"Search..\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    class: \"button\",\n    style: {\n      verticalAlign: 'middle'\n    },\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Hover\"))), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://money.cnn.com/data/dow30/\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Only DOW 30 Companies\")), React.createElement(\"div\", {\n    style: {\n      display: stockDataBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" Company: \", name), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" NASDAQ: \", company_ticker), !loading && x != null && y != null && line != null ? React.createElement(StockChart, {\n    x: x,\n    y: y,\n    l: line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))));\n};\n\nLanding.propTypes = {\n  updateStockData: PropTypes.func.isRequired,\n  stockdata: PropTypes.object.isRequired,\n  findCompanies: PropTypes.func.isRequired,\n  findcompanies: PropTypes.object.isRequired,\n  clearCompanies: PropTypes.func.isRequired,\n  clearStocks: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  stockdata: state.stockdata,\n  findcompanies: state.findcompanies\n});\n\nexport default connect(mapStateToProps, {\n  updateStockData,\n  findCompanies,\n  clearStocks,\n  clearCompanies\n})(Landing);","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/Landing.js"],"names":["React","useEffect","useState","Link","Redirect","connect","PropTypes","updateStockData","clearStocks","findCompanies","clearCompanies","StockChart","Landing","stockdata","x","y","line","loading","company_ticker","name","findcompanies","companyTicker","loadingCompanies","company","prediction","formData","setFormData","stockDataBlock","setStockDataBlock","onChange","e","target","value","onSubmit","preventDefault","verticalAlign","display","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateStockData, clearStocks } from '../actions/stockdata';\nimport { findCompanies, clearCompanies } from '../actions/findcompanies';\nimport StockChart from './StockChart'\n\nconst Landing = ({clearStocks, clearCompanies, updateStockData, findCompanies, stockdata: { x, y, line, loading, company_ticker, name },\n   findcompanies: { companyTicker, loadingCompanies }}) => {\n\n   const [ formData, setFormData ] = useState({\n      company: '',\n      prediction: ''\n   })\n\n   const [ stockDataBlock, setStockDataBlock ] = useState('none')\n\n   const { company, prediction } = formData;\n\n   const onChange = e => {\n      setFormData({...formData, [e.target.name]: e.target.value});\n   }\n\n   const onSubmit = e => {\n      e.preventDefault();\n      clearCompanies()\n      findCompanies(company)\n      clearStocks()\n      setStockDataBlock('none')\n   }\n\n   useEffect(() => {\n      if (!loadingCompanies && companyTicker != null) {\n         updateStockData(companyTicker)\n         setStockDataBlock('block')\n      }\n   }, [loadingCompanies])\n\n   return (\n    <section className=\"landingPage\">\n      <div className='background-color'>\n         <div className='center-container'>\n            <h1>Stock Prediction and Analysis</h1>\n               <form>\n                 <input\n                    type=\"text\"\n                    name=\"company\"\n                    value={company}\n                    onChange={e => onChange(e)}\n                    placeholder=\"Search..\"\n                    required />\n                 <button\n                    class=\"button\"\n                    style={{verticalAlign:'middle'}}\n                    onClick={e => onSubmit(e)}\n                    ><span>Hover</span></button>\n               </form>\n            <h6><a href='https://money.cnn.com/data/dow30/' target=\"_blank\">Only DOW 30 Companies</a></h6>\n            <div style={{display:  stockDataBlock }}>\n               <h6> Company: { name }</h6>\n               <h6> NASDAQ: { company_ticker }</h6>\n               {!loading && x != null && y != null && line != null ? (<StockChart x={x} y={y} l={line}/>) : (<div></div>)}\n            </div>\n         </div>\n      </div>\n    </section>\n   )\n\n}\n\nLanding.propTypes = {\n   updateStockData: PropTypes.func.isRequired,\n   stockdata: PropTypes.object.isRequired,\n   findCompanies: PropTypes.func.isRequired,\n   findcompanies: PropTypes.object.isRequired,\n   clearCompanies: PropTypes.func.isRequired,\n   clearStocks: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n   stockdata: state.stockdata,\n   findcompanies: state.findcompanies\n});\n\nexport default connect(mapStateToProps, { updateStockData, findCompanies, clearStocks, clearCompanies })(Landing);\n"]},"metadata":{},"sourceType":"module"}