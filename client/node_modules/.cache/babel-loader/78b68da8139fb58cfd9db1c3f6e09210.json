{"ast":null,"code":"import _defineProperty from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/PredictStock.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { predictPrices, clearPrices } from '../actions/predictprices';\n\nconst PredictStock = ({\n  predictPrices,\n  clearPrices,\n  predictprices: {\n    x,\n    y,\n    loading\n  }\n}) => {\n  const _useState = useState({\n    startDate: '',\n    endDate: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const startDate = formData.startDate,\n        endDate = formData.endDate;\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    predictPrices(startDate, endDate);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    style: {\n      display: 'inline-block',\n      marginRight: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Make a Prediction:\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Select a date in the future, not from the above dates\"), React.createElement(\"form\", {\n    action: \"/action_page.php\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Start Date: \", React.createElement(\"input\", {\n    type: \"date\",\n    name: \"startDate\",\n    value: startDate,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"End Date: \", React.createElement(\"input\", {\n    type: \"date\",\n    name: \"endDate\",\n    value: endDate,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    class: \"button\",\n    style: {\n      verticalAlign: 'middle',\n      marginBottom: '5%'\n    },\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nPredictStock.propTypes = {\n  predictprices: PropTypes.object.isRequired,\n  predictPrices: PropTypes.func.isRequired,\n  clearPrices: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  predictprices: state.predictprices\n});\n\nexport default connect(mapStateToProps, {\n  predictPrices,\n  clearPrices\n})(PredictStock);","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/PredictStock.js"],"names":["React","useEffect","useState","Link","Redirect","connect","PropTypes","predictPrices","clearPrices","PredictStock","predictprices","x","y","loading","startDate","endDate","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","display","marginRight","verticalAlign","marginBottom","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { predictPrices, clearPrices } from '../actions/predictprices';\n\nconst PredictStock = ({ predictPrices, clearPrices, predictprices: { x, y, loading}}) => {\n\n   const [ formData, setFormData ] = useState({\n      startDate: '',\n      endDate: '',\n   })\n\n\n   const { startDate, endDate } = formData;\n\n   const onChange = e => {\n      setFormData({...formData, [e.target.name]: e.target.value});\n   }\n\n   const onSubmit = e => {\n      e.preventDefault();\n      predictPrices(startDate, endDate)\n   }\n\n   return (\n      <div>\n         <h5 style={{display: 'inline-block', marginRight: '2%'}}>Make a Prediction:</h5>\n         <small>Select a date in the future, not from the above dates</small>\n         <form action=\"/action_page.php\">\n           <p>Start Date: <input\n             type=\"date\"\n             name=\"startDate\"\n             value={startDate}\n             onChange={e => onChange(e)}\n             required /></p>\n           <p>End Date: <input\n             type=\"date\"\n             name=\"endDate\"\n             value={endDate}\n             onChange={e => onChange(e)}\n             required /></p>\n             <button\n               class=\"button\"\n               style={{verticalAlign:'middle', marginBottom: '5%'}}\n               onClick={e => onSubmit(e)}\n               ><span>Submit</span></button>\n         </form>\n      </div>\n   )\n}\n\nPredictStock.propTypes = {\n   predictprices: PropTypes.object.isRequired,\n   predictPrices: PropTypes.func.isRequired,\n   clearPrices: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n   predictprices: state.predictprices\n});\n\nexport default connect(mapStateToProps, { predictPrices, clearPrices })(PredictStock);\n"]},"metadata":{},"sourceType":"module"}