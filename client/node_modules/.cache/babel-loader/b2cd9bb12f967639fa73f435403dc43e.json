{"ast":null,"code":"import _defineProperty from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/Landing.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateStockData, clearStocks } from '../actions/stockdata';\nimport { findCompanies, clearCompanies } from '../actions/findcompanies';\nimport StockChart from './StockChart';\nimport PredictStock from './PredictStock';\n\nconst Landing = ({\n  clearStocks,\n  clearCompanies,\n  updateStockData,\n  findCompanies,\n  stockdata: {\n    x,\n    y,\n    line,\n    loading,\n    company_ticker,\n    name\n  },\n  findcompanies: {\n    companyTicker,\n    loadingCompanies\n  }\n}) => {\n  const _useState = useState({\n    company: 'apple',\n    prediction: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState('none'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stockDataBlock = _useState4[0],\n        setStockDataBlock = _useState4[1];\n\n  const _useState5 = useState('daily'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        frequency = _useState6[0],\n        setFrequency = _useState6[1];\n\n  const _useState7 = useState({\n    daily: 'checked',\n    monthly: '',\n    yearly: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        frequencyRadio = _useState8[0],\n        setFrequencyRadio = _useState8[1];\n\n  const company = formData.company,\n        prediction = formData.prediction;\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const changeTimeSpan = frequency => {\n    setFrequency(frequency);\n    clearStocks();\n    updateStockData(companyTicker, frequency);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    clearCompanies();\n    findCompanies(company);\n    clearStocks();\n    setStockDataBlock('none');\n  };\n\n  useEffect(() => {\n    if (!loadingCompanies && companyTicker != null) {\n      updateStockData(companyTicker, frequency);\n      setStockDataBlock('block');\n    }\n  }, [loadingCompanies]);\n  return React.createElement(\"div\", {\n    className: \"center-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Stock Prediction and Analysis\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"company\",\n    value: company,\n    onChange: e => onChange(e),\n    placeholder: \"Search..\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"button\",\n    style: {\n      verticalAlign: 'middle'\n    },\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    style: {\n      fontSize: '15px',\n      margin: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://money.cnn.com/data/dow30/\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Only DOW 30 Companies\")), React.createElement(\"div\", {\n    className: \"flex-container\",\n    style: {\n      display: stockDataBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" Company: \", name), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" NASDAQ: \", company_ticker), !loading && x != null && y != null && line != null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(StockChart, {\n    x: x,\n    y: y,\n    l: line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      margin: '2%',\n      display: 'inline-block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Select a Time frame: \"), React.createElement(\"label\", {\n    className: \"container\",\n    style: {\n      display: 'inline-block',\n      marginRight: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Daily\", React.createElement(\"input\", {\n    onChange: () => changeTimeSpan('daily'),\n    type: \"radio\",\n    checked: \"checked\",\n    name: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"container\",\n    style: {\n      display: 'inline-block',\n      marginRight: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"monthly\", React.createElement(\"input\", {\n    onChange: () => changeTimeSpan('monthly'),\n    type: \"radio\",\n    name: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"container\",\n    style: {\n      display: 'inline-block',\n      marginRight: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Yearly\", React.createElement(\"input\", {\n    onChange: () => changeTimeSpan('yearly'),\n    type: \"radio\",\n    name: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(PredictStock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n};\n\nLanding.propTypes = {\n  updateStockData: PropTypes.func.isRequired,\n  stockdata: PropTypes.object.isRequired,\n  findCompanies: PropTypes.func.isRequired,\n  findcompanies: PropTypes.object.isRequired,\n  clearCompanies: PropTypes.func.isRequired,\n  clearStocks: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  stockdata: state.stockdata,\n  findcompanies: state.findcompanies\n});\n\nexport default connect(mapStateToProps, {\n  updateStockData,\n  findCompanies,\n  clearStocks,\n  clearCompanies\n})(Landing);","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/Landing.js"],"names":["React","useEffect","useState","Link","Redirect","connect","PropTypes","updateStockData","clearStocks","findCompanies","clearCompanies","StockChart","PredictStock","Landing","stockdata","x","y","line","loading","company_ticker","name","findcompanies","companyTicker","loadingCompanies","company","prediction","formData","setFormData","stockDataBlock","setStockDataBlock","frequency","setFrequency","daily","monthly","yearly","frequencyRadio","setFrequencyRadio","onChange","e","target","value","changeTimeSpan","onSubmit","preventDefault","verticalAlign","fontSize","margin","display","marginRight","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateStockData, clearStocks } from '../actions/stockdata';\nimport { findCompanies, clearCompanies } from '../actions/findcompanies';\nimport StockChart from './StockChart';\nimport PredictStock from './PredictStock';\n\nconst Landing = ({clearStocks, clearCompanies, updateStockData, findCompanies, stockdata: { x, y, line, loading, company_ticker, name },\n   findcompanies: { companyTicker, loadingCompanies }}) => {\n\n   const [ formData, setFormData ] = useState({\n      company: 'apple',\n      prediction: ''\n   })\n   const [ stockDataBlock, setStockDataBlock ] = useState('none')\n   const [ frequency, setFrequency ] = useState('daily')\n   const [ frequencyRadio, setFrequencyRadio ] = useState({\n      daily:'checked',\n      monthly: '',\n      yearly: ''\n   })\n   const { company, prediction } = formData;\n\n   const onChange = e => {\n      setFormData({...formData, [e.target.name]: e.target.value});\n   }\n\n   const changeTimeSpan = frequency => {\n      setFrequency(frequency)\n      clearStocks()\n      updateStockData(companyTicker, frequency)\n   }\n\n   const onSubmit = e => {\n      e.preventDefault();\n      clearCompanies()\n      findCompanies(company)\n      clearStocks()\n      setStockDataBlock('none')\n   }\n\n   useEffect(() => {\n      if (!loadingCompanies && companyTicker != null) {\n         updateStockData(companyTicker, frequency)\n         setStockDataBlock('block')\n      }\n   }, [loadingCompanies])\n\n   return (\n      <div className='center-container'>\n         <h1>Stock Prediction and Analysis</h1>\n            <form>\n              <input\n                 type=\"text\"\n                 name=\"company\"\n                 value={company}\n                 onChange={e => onChange(e)}\n                 placeholder=\"Search..\"\n                 required />\n              <button\n                 className=\"button\"\n                 style={{verticalAlign:'middle'}}\n                 onClick={e => onSubmit(e)}\n                 ><span>Submit</span></button>\n            </form>\n         <div style={{fontSize: '15px', margin: '2%'}}><a href='https://money.cnn.com/data/dow30/' target=\"_blank\">Only DOW 30 Companies</a></div>\n\n         <div className='flex-container' style={{display:  stockDataBlock }}>\n            <h6> Company: { name }</h6>\n            <h6> NASDAQ: { company_ticker }</h6>\n            {!loading && x != null && y != null && line != null ?\n               (\n                  <div>\n                     <StockChart x={x} y={y} l={line}/>\n                        <div style={{margin: '2%', display: 'inline-block'}}>Select a Time frame: </div>\n                        <label className=\"container\" style={{display: 'inline-block', marginRight: '2%'}}>Daily\n                          <input\n                             onChange={() => changeTimeSpan('daily')}\n                             type=\"radio\"\n                             checked=\"checked\"\n                             name=\"radio\"/>\n                          <span className=\"checkmark\"></span>\n                        </label>\n                        <label className=\"container\" style={{display: 'inline-block',marginRight: '2%'}}>monthly\n                          <input\n                             onChange={() => changeTimeSpan('monthly')}\n                             type=\"radio\"\n                             name=\"radio\"/>\n                          <span className=\"checkmark\"></span>\n                        </label>\n                        <label className=\"container\" style={{display: 'inline-block', marginRight: '2%'}}>Yearly\n                          <input\n                             onChange={() => changeTimeSpan('yearly')}\n                             type=\"radio\"\n                             name=\"radio\"/>\n                          <span className=\"checkmark\"></span>\n                        </label>\n                     <PredictStock />\n                  </div>\n               ) :\n               (<div></div>)}\n         </div>\n      </div>\n   )\n}\n\nLanding.propTypes = {\n   updateStockData: PropTypes.func.isRequired,\n   stockdata: PropTypes.object.isRequired,\n   findCompanies: PropTypes.func.isRequired,\n   findcompanies: PropTypes.object.isRequired,\n   clearCompanies: PropTypes.func.isRequired,\n   clearStocks: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n   stockdata: state.stockdata,\n   findcompanies: state.findcompanies\n});\n\nexport default connect(mapStateToProps, { updateStockData, findCompanies, clearStocks, clearCompanies })(Landing);\n"]},"metadata":{},"sourceType":"module"}