{"ast":null,"code":"import _defineProperty from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { PREDICT_PRICES, CLEAR_PRICES } from '../actions/types';\nconst initialState = {\n  x: null,\n  y: null,\n  loading: true\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case PREDICT_PRICES:\n      return _objectSpread({}, state, {\n        x: payload.predictionData.x,\n        y: payload.predictionData.y,\n        loading: false\n      });\n\n    case CLEAR_PRICES:\n      return _objectSpread({}, state, {\n        x: null,\n        y: null,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/reducers/predict.js"],"names":["PREDICT_PRICES","CLEAR_PRICES","initialState","x","y","loading","state","action","type","payload","predictionData"],"mappings":";;;;;;AACA,SACGA,cADH,EAEGC,YAFH,QAGO,kBAHP;AAKA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,CAAC,EAAE,IADe;AAElBC,EAAAA,CAAC,EAAE,IAFe;AAGlBC,EAAAA,OAAO,EAAE;AAHS,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AAAA,QAC3CC,IAD2C,GACzBD,MADyB,CAC3CC,IAD2C;AAAA,QACrCC,OADqC,GACzBF,MADyB,CACrCE,OADqC;;AAEnD,UAAOD,IAAP;AACG,SAAKR,cAAL;AACG,+BACMM,KADN;AAEGH,QAAAA,CAAC,EAAEM,OAAO,CAACC,cAAR,CAAuBP,CAF7B;AAGGC,QAAAA,CAAC,EAAEK,OAAO,CAACC,cAAR,CAAuBN,CAH7B;AAIGC,QAAAA,OAAO,EAAE;AAJZ;;AAMH,SAAKJ,YAAL;AACG,+BACMK,KADN;AAEGH,QAAAA,CAAC,EAAE,IAFN;AAGGC,QAAAA,CAAC,EAAE,IAHN;AAIGC,QAAAA,OAAO,EAAE;AAJZ;;AAMH;AACG,aAAOC,KAAP;AAhBN;AAkBF","sourcesContent":["\nimport {\n   PREDICT_PRICES,\n   CLEAR_PRICES\n} from '../actions/types';\n\nconst initialState = {\n   x: null,\n   y: null,\n   loading: true\n}\n\nexport default function(state = initialState, action) {\n   const { type, payload } = action;\n   switch(type) {\n      case PREDICT_PRICES:\n         return {\n            ...state,\n            x: payload.predictionData.x,\n            y: payload.predictionData.y,\n            loading: false\n         }\n      case CLEAR_PRICES:\n         return {\n            ...state,\n            x: null,\n            y: null,\n            loading: false\n         }\n      default:\n         return state;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}