{"ast":null,"code":"import _defineProperty from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { UPDATE_TWITTER_RESULTS, CLEAR_TWITTER_RESULTS } from '../actions/types';\nconst initialState = {\n  count: 0,\n  negative: null,\n  neutral: null,\n  positive: null,\n  subjectivityAvg: null,\n  tweets: null,\n  loading: true\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case UPDATE_TWITTER_RESULTS:\n      return _objectSpread({}, state, {\n        negative: payload.negative,\n        neutral: payload.neutral,\n        positive: payload.positive,\n        subjectivityAvg: payload.subjectivityAvg,\n        tweets: payload.tweets,\n        loading: false\n      });\n\n    case CLEAR_TWITTER_RESULTS:\n      return _objectSpread({}, state, {\n        x: null,\n        y: null,\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/reducers/twitterresults.js"],"names":["UPDATE_TWITTER_RESULTS","CLEAR_TWITTER_RESULTS","initialState","count","negative","neutral","positive","subjectivityAvg","tweets","loading","state","action","type","payload","x","y"],"mappings":";;;;;;AACA,SACGA,sBADH,EAEGC,qBAFH,QAGO,kBAHP;AAKA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAE,CADW;AAElBC,EAAAA,QAAQ,EAAE,IAFQ;AAGlBC,EAAAA,OAAO,EAAE,IAHS;AAIlBC,EAAAA,QAAQ,EAAE,IAJQ;AAKlBC,EAAAA,eAAe,EAAE,IALC;AAMlBC,EAAAA,MAAM,EAAE,IANU;AAOlBC,EAAAA,OAAO,EAAE;AAPS,CAArB;AAUA,eAAe,UAASC,KAAK,GAAGR,YAAjB,EAA+BS,MAA/B,EAAuC;AAAA,QAC3CC,IAD2C,GACzBD,MADyB,CAC3CC,IAD2C;AAAA,QACrCC,OADqC,GACzBF,MADyB,CACrCE,OADqC;;AAEnD,UAAOD,IAAP;AACG,SAAKZ,sBAAL;AACG,+BACMU,KADN;AAEGN,QAAAA,QAAQ,EAAES,OAAO,CAACT,QAFrB;AAGGC,QAAAA,OAAO,EAAEQ,OAAO,CAACR,OAHpB;AAIGC,QAAAA,QAAQ,EAAEO,OAAO,CAACP,QAJrB;AAKGC,QAAAA,eAAe,EAAEM,OAAO,CAACN,eAL5B;AAMGC,QAAAA,MAAM,EAAEK,OAAO,CAACL,MANnB;AAOGC,QAAAA,OAAO,EAAE;AAPZ;;AASH,SAAKR,qBAAL;AACG,+BACMS,KADN;AAEGI,QAAAA,CAAC,EAAE,IAFN;AAGGC,QAAAA,CAAC,EAAE,IAHN;AAIGN,QAAAA,OAAO,EAAE;AAJZ;;AAMH;AACG,aAAOC,KAAP;AAnBN;AAqBF","sourcesContent":["\nimport {\n   UPDATE_TWITTER_RESULTS,\n   CLEAR_TWITTER_RESULTS\n} from '../actions/types';\n\nconst initialState = {\n   count: 0,\n   negative: null,\n   neutral: null,\n   positive: null,\n   subjectivityAvg: null,\n   tweets: null,\n   loading: true\n}\n\nexport default function(state = initialState, action) {\n   const { type, payload } = action;\n   switch(type) {\n      case UPDATE_TWITTER_RESULTS:\n         return {\n            ...state,\n            negative: payload.negative,\n            neutral: payload.neutral,\n            positive: payload.positive,\n            subjectivityAvg: payload.subjectivityAvg,\n            tweets: payload.tweets,\n            loading: false\n         }\n      case CLEAR_TWITTER_RESULTS:\n         return {\n            ...state,\n            x: null,\n            y: null,\n            loading: true\n         }\n      default:\n         return state;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}