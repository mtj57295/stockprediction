{"ast":null,"code":"import _defineProperty from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { UPDATE_STOCK_DATA } from '../actions/types';\nconst initialState = {\n  x: null,\n  y: null,\n  line: null,\n  loading: true,\n  company: ''\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case UPDATE_STOCK_DATA:\n      return _objectSpread({}, state, {\n        loadingArtists: false,\n        x: payload.x,\n        y: payload.y,\n        line: payload.line,\n        loading: false,\n        company: payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/reducers/stockdata.js"],"names":["UPDATE_STOCK_DATA","initialState","x","y","line","loading","company","state","action","type","payload","loadingArtists"],"mappings":";;;;;;AAAA,SACGA,iBADH,QAEO,kBAFP;AAIA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,CAAC,EAAE,IADe;AAElBC,EAAAA,CAAC,EAAE,IAFe;AAGlBC,EAAAA,IAAI,EAAE,IAHY;AAIlBC,EAAAA,OAAO,EAAE,IAJS;AAKlBC,EAAAA,OAAO,EAAE;AALS,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AAAA,QAC3CC,IAD2C,GACzBD,MADyB,CAC3CC,IAD2C;AAAA,QACrCC,OADqC,GACzBF,MADyB,CACrCE,OADqC;;AAEnD,UAAOD,IAAP;AACG,SAAKT,iBAAL;AACG,+BACMO,KADN;AAEGI,QAAAA,cAAc,EAAE,KAFnB;AAGGT,QAAAA,CAAC,EAAEQ,OAAO,CAACR,CAHd;AAIGC,QAAAA,CAAC,EAAEO,OAAO,CAACP,CAJd;AAKGC,QAAAA,IAAI,EAAEM,OAAO,CAACN,IALjB;AAMGC,QAAAA,OAAO,EAAE,KANZ;AAOGC,QAAAA,OAAO,EAAEI;AAPZ;;AASH;AACG,aAAOH,KAAP;AAZN;AAcF","sourcesContent":["import {\n   UPDATE_STOCK_DATA\n} from '../actions/types';\n\nconst initialState = {\n   x: null,\n   y: null,\n   line: null,\n   loading: true,\n   company: ''\n}\n\nexport default function(state = initialState, action) {\n   const { type, payload } = action;\n   switch(type) {\n      case UPDATE_STOCK_DATA:\n         return {\n            ...state,\n            loadingArtists: false,\n            x: payload.x,\n            y: payload.y,\n            line: payload.line,\n            loading: false,\n            company: payload\n         }\n      default:\n         return state;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}