{"ast":null,"code":"import _defineProperty from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/Landing.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateStockData, clearStocks } from '../actions/stockdata';\nimport { findCompanies, clearCompanies } from '../actions/findcompanies';\nimport StockChart from './StockChart';\nimport PredictStock from './PredictStock';\n\nconst Landing = () => {\n  const _useState = useState({\n    company: 'apple',\n    prediction: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const comapny = formData.comapny;\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => React.createElement(StockResults, {\n    company: company,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n\n  return React.createElement(\"div\", {\n    className: \"center-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Stock Prediction and Analysis\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"company\",\n    value: company,\n    onChange: e => onChange(e),\n    placeholder: \"Search..\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"button\",\n    style: {\n      verticalAlign: 'middle'\n    },\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    style: {\n      fontSize: '15px',\n      margin: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://money.cnn.com/data/dow30/\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Only DOW 30 Companies\")), React.createElement(StockResults, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"flex-container\",\n    style: {\n      display: stockDataBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" Company: \", name), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" NASDAQ: \", company_ticker), !loading && x != null && y != null && line != null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(StockChart, {\n    x: x,\n    y: y,\n    l: line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      margin: '2%',\n      display: 'inline-block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Select a Time frame: \"), React.createElement(\"label\", {\n    className: \"container\",\n    style: {\n      display: 'inline-block',\n      marginRight: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Daily\", React.createElement(\"input\", {\n    onChange: () => changeTimeSpan('daily'),\n    type: \"radio\",\n    checked: daily,\n    name: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"container\",\n    style: {\n      display: 'inline-block',\n      marginRight: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"monthly\", React.createElement(\"input\", {\n    onChange: () => changeTimeSpan('monthly'),\n    checked: monthly,\n    type: \"radio\",\n    name: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"container\",\n    style: {\n      display: 'inline-block',\n      marginRight: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Yearly\", React.createElement(\"input\", {\n    onChange: () => changeTimeSpan('yearly'),\n    checked: yearly,\n    type: \"radio\",\n    name: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(PredictStock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n};\n\nLanding.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(Landing);","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/Landing.js"],"names":["React","useEffect","useState","Link","Redirect","connect","PropTypes","updateStockData","clearStocks","findCompanies","clearCompanies","StockChart","PredictStock","Landing","company","prediction","formData","setFormData","comapny","onChange","e","target","name","value","onSubmit","verticalAlign","fontSize","margin","display","stockDataBlock","company_ticker","loading","x","y","line","marginRight","changeTimeSpan","daily","monthly","yearly","propTypes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateStockData, clearStocks } from '../actions/stockdata';\nimport { findCompanies, clearCompanies } from '../actions/findcompanies';\nimport StockChart from './StockChart';\nimport PredictStock from './PredictStock';\n\nconst Landing = () => {\n\n   const [ formData, setFormData ] = useState({\n      company: 'apple',\n      prediction: ''\n   })\n\n   const { comapny } = formData\n\n   const onChange = e => {\n      setFormData({...formData, [e.target.name]: e.target.value});\n   }\n\n   const onSubmit = e => (<StockResults company={company} />)\n\n   return (\n      <div className='center-container'>\n         <h1>Stock Prediction and Analysis</h1>\n            <form>\n              <input\n                 type=\"text\"\n                 name=\"company\"\n                 value={company}\n                 onChange={e => onChange(e)}\n                 placeholder=\"Search..\"\n                 required />\n              <button\n                 className=\"button\"\n                 style={{verticalAlign:'middle'}}\n                 onClick={e => onSubmit(e)}\n                 ><span>Submit</span></button>\n            </form>\n         <div style={{fontSize: '15px', margin: '2%'}}><a href='https://money.cnn.com/data/dow30/' target=\"_blank\">Only DOW 30 Companies</a></div>\n         <StockResults />\n         <div className='flex-container' style={{display:  stockDataBlock }}>\n            <h6> Company: { name }</h6>\n            <h6> NASDAQ: { company_ticker }</h6>\n            {!loading && x != null && y != null && line != null ?\n               (\n                  <div>\n                     <StockChart x={x} y={y} l={line}/>\n                        <div style={{margin: '2%', display: 'inline-block'}}>Select a Time frame: </div>\n                        <label className=\"container\" style={{display: 'inline-block', marginRight: '2%'}}>Daily\n                          <input\n                             onChange={() => changeTimeSpan('daily')}\n                             type=\"radio\"\n                             checked={daily}\n                             name=\"radio\"/>\n                          <span className=\"checkmark\"></span>\n                        </label>\n                        <label className=\"container\" style={{display: 'inline-block',marginRight: '2%'}}>monthly\n                          <input\n                             onChange={() => changeTimeSpan('monthly')}\n                             checked={monthly}\n                             type=\"radio\"\n                             name=\"radio\"/>\n                          <span className=\"checkmark\"></span>\n                        </label>\n                        <label className=\"container\" style={{display: 'inline-block', marginRight: '2%'}}>Yearly\n                          <input\n                             onChange={() => changeTimeSpan('yearly')}\n                             checked={yearly}\n                             type=\"radio\"\n                             name=\"radio\"/>\n                          <span className=\"checkmark\"></span>\n                        </label>\n                     <PredictStock />\n                  </div>\n               ) :\n               (<div></div>)}\n         </div>\n      </div>\n   )\n}\n\nLanding.propTypes = {\n\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nexport default connect(mapStateToProps, { })(Landing);\n"]},"metadata":{},"sourceType":"module"}