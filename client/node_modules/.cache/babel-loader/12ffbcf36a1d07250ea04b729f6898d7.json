{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/TwitterResults.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateTwitterResults } from '../actions/twitterresults';\nimport PredictedChart from './PredictedChart';\n\nconst TwitterResults = ({\n  company,\n  updateTwitterResults,\n  twitteresults: {\n    count,\n    negative,\n    neutral,\n    positive,\n    subjectivityAvg,\n    tweets,\n    loading\n  }\n}) => {\n  useEffect(() => {});\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"dsfsd\");\n};\n\nTwitterResults.propTypes = {\n  twitteresults: PropTypes.object.isRequired,\n  updateTwitterResults: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  twitteresults: state.twitteresults\n});\n\nexport default connect(mapStateToProps, {\n  updateTwitterResults\n})(TwitterResults);","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/TwitterResults.js"],"names":["React","useEffect","useState","Link","Redirect","connect","PropTypes","updateTwitterResults","PredictedChart","TwitterResults","company","twitteresults","count","negative","neutral","positive","subjectivityAvg","tweets","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWH,EAAAA,oBAAX;AAAiCI,EAAAA,aAAa,EACnE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA,eAAtC;AAAuDC,IAAAA,MAAvD;AAA+DC,IAAAA;AAA/D;AADqB,CAAD,KACyD;AAE7EjB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAIA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH;AAKF,CAZD;;AAcAQ,cAAc,CAACU,SAAf,GAA2B;AACxBR,EAAAA,aAAa,EAAEL,SAAS,CAACc,MAAV,CAAiBC,UADR;AAExBd,EAAAA,oBAAoB,EAAED,SAAS,CAACgB,IAAV,CAAeD;AAFb,CAA3B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC/Bb,EAAAA,aAAa,EAAEa,KAAK,CAACb;AADU,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACkB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAmDE,cAAnD,CAAf","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateTwitterResults } from '../actions/twitterresults';\nimport PredictedChart from './PredictedChart';\n\nconst TwitterResults = ({ company, updateTwitterResults, twitteresults:\n   { count, negative, neutral, positive, subjectivityAvg, tweets, loading}}) => {\n\n   useEffect(() => {\n\n   })\n\n   return (\n      <div>\n         dsfsd\n      </div>\n   )\n}\n\nTwitterResults.propTypes = {\n   twitteresults: PropTypes.object.isRequired,\n   updateTwitterResults: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n   twitteresults: state.twitteresults\n});\n\nexport default connect(mapStateToProps, { updateTwitterResults })(TwitterResults);\n"]},"metadata":{},"sourceType":"module"}