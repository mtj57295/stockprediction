{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/PredictedChart.js\";\nimport React, { useEffect } from 'react';\nimport Chart from 'chart.js';\n\nconst PredictedChart = ({\n  x,\n  y\n}) => {\n  useEffect(() => {\n    var ctx = document.getElementById('myChart2').getContext('2d');\n    var lineChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: [{\n          label: 'Predicted Model',\n          data: y,\n          fill: false,\n          backgroundColor: '#51d0de',\n          borderColor: '#51d0de'\n        }],\n        labels: x\n      },\n      options: {\n        legend: {\n          labels: {\n            fontColor: 'rgba(46, 49, 49, 1)',\n            fontSize: 20\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontSize: 18,\n              fontColor: 'rgba(46, 49, 49, 1)'\n            },\n            type: 'time',\n            time: {\n              displayFormats: {\n                week: '11'\n              }\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontSize: 18,\n              fontColor: 'rgba(46, 49, 49, 1)'\n            }\n          }]\n        }\n      }\n    });\n  }, [0]);\n  return React.createElement(\"div\", {\n    className: \"StockChart\",\n    style: {\n      height: '50vh',\n      width: '1000px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    id: \"myChart2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nexport default PredictedChart;","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/PredictedChart.js"],"names":["React","useEffect","Chart","PredictedChart","x","y","ctx","document","getElementById","getContext","lineChart","type","data","datasets","label","fill","backgroundColor","borderColor","labels","options","legend","fontColor","fontSize","scales","xAxes","ticks","time","displayFormats","week","yAxes","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,CAAD;AAAIC,EAAAA;AAAJ,CAAD,KAAY;AAEhCJ,EAAAA,SAAS,CAAC,MAAM;AACb,QAAIK,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,UAApC,CAA+C,IAA/C,CAAV;AACA,QAAIC,SAAS,GAAG,IAAIR,KAAJ,CAAUI,GAAV,EAAe;AAC5BK,MAAAA,IAAI,EAAE,MADsB;AAE5BC,MAAAA,IAAI,EAAE;AACHC,QAAAA,QAAQ,EAAE,CAAC;AACRC,UAAAA,KAAK,EAAE,iBADC;AAERF,UAAAA,IAAI,EAAEP,CAFE;AAGRU,UAAAA,IAAI,EAAE,KAHE;AAIRC,UAAAA,eAAe,EAAE,SAJT;AAKRC,UAAAA,WAAW,EAAE;AALL,SAAD,CADP;AASHC,QAAAA,MAAM,EAAEd;AATL,OAFsB;AAc5Be,MAAAA,OAAO,EAAE;AACNC,QAAAA,MAAM,EAAE;AACLF,UAAAA,MAAM,EAAE;AACLG,YAAAA,SAAS,EAAE,qBADN;AAELC,YAAAA,QAAQ,EAAE;AAFL;AADH,SADF;AAONC,QAAAA,MAAM,EAAE;AACLC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AAAEH,cAAAA,QAAQ,EAAE,EAAZ;AAAgBD,cAAAA,SAAS,EAAE;AAA3B,aADH;AAEJV,YAAAA,IAAI,EAAE,MAFF;AAGJe,YAAAA,IAAI,EAAE;AAAEC,cAAAA,cAAc,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AAAlB;AAHF,WAAD,CADF;AAMNC,UAAAA,KAAK,EAAE,CAAC;AACLJ,YAAAA,KAAK,EAAE;AAAEH,cAAAA,QAAQ,EAAE,EAAZ;AAAgBD,cAAAA,SAAS,EAAE;AAA3B;AADF,WAAD;AAND;AAPF;AAdmB,KAAf,CAAhB;AAkCF,GApCQ,EAoCN,CAAC,CAAD,CApCM,CAAT;AAuCA,SACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAACS,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAQ,IAAA,EAAE,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH;AAKF,CA9CD;;AAgDA,eAAe5B,cAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport Chart from 'chart.js'\n\nconst PredictedChart = ({x, y}) => {\n\n   useEffect(() => {\n      var ctx = document.getElementById('myChart2').getContext('2d');\n      var lineChart = new Chart(ctx, {\n         type: 'line',\n         data: {\n            datasets: [{\n               label: 'Predicted Model',\n               data: y,\n               fill: false,\n               backgroundColor: '#51d0de',\n               borderColor: '#51d0de'\n            }],\n\n            labels: x\n         },\n\n         options: {\n            legend: {\n               labels: {\n                  fontColor: 'rgba(46, 49, 49, 1)',\n                  fontSize: 20\n               }\n            },\n            scales: {\n               xAxes: [{\n                   ticks: { fontSize: 18, fontColor: 'rgba(46, 49, 49, 1)' },\n                   type: 'time',\n                   time: { displayFormats: { week: '11' }}\n              }],\n              yAxes: [{\n                 ticks: { fontSize: 18, fontColor: 'rgba(46, 49, 49, 1)'}\n              }]\n           }\n        }\n      });\n\n   }, [0])\n\n\n   return (\n      <div className='StockChart' style={{height: '50vh', width: '1000px'}} >\n         <canvas id=\"myChart2\"></canvas>\n      </div>\n   )\n}\n\nexport default PredictedChart;\n"]},"metadata":{},"sourceType":"module"}