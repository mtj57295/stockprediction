{"ast":null,"code":"import _defineProperty from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/oem/Desktop/Stocks/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oem/Desktop/Stocks/client/src/components/PredictStock.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { predictPrices, clearPrices } from '../actions/predictprices';\nimport PredictedChart from './PredictedChart';\n\nconst PredictStock = ({\n  predictPrices,\n  clearPrices,\n  predictprices: {\n    x,\n    y,\n    loading\n  }\n}) => {\n  const _useState = useState({\n    startDate: '',\n    endDate: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState('none'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        predictPricesBlock = _useState4[0],\n        setPredictPricesBlock = _useState4[1];\n\n  const startDate = formData.startDate,\n        endDate = formData.endDate;\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    clearPrices();\n    predictPrices(startDate, endDate);\n    setPredictPricesBlock('block');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    style: {\n      display: 'inline-block',\n      marginRight: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Make a Prediction:\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Select a date in the future, works best for 100 days and less\"), React.createElement(\"form\", {\n    action: \"/action_page.php\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Start Date: \", React.createElement(\"input\", {\n    type: \"date\",\n    name: \"startDate\",\n    value: startDate,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"End Date: \", React.createElement(\"input\", {\n    type: \"date\",\n    name: \"endDate\",\n    value: endDate,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    class: \"button\",\n    style: {\n      verticalAlign: 'middle',\n      marginBottom: '5%'\n    },\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    style: {\n      display: predictPricesBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, !loading && x != null && y != null ? React.createElement(PredictedChart, {\n    x: x,\n    y: y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n};\n\nPredictStock.propTypes = {\n  predictprices: PropTypes.object.isRequired,\n  predictPrices: PropTypes.func.isRequired,\n  clearPrices: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  predictprices: state.predictprices\n});\n\nexport default connect(mapStateToProps, {\n  predictPrices,\n  clearPrices\n})(PredictStock);","map":{"version":3,"sources":["/home/oem/Desktop/Stocks/client/src/components/PredictStock.js"],"names":["React","useEffect","useState","Link","Redirect","connect","PropTypes","predictPrices","clearPrices","PredictedChart","PredictStock","predictprices","x","y","loading","startDate","endDate","formData","setFormData","predictPricesBlock","setPredictPricesBlock","onChange","e","target","name","value","onSubmit","preventDefault","display","marginRight","verticalAlign","marginBottom","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { predictPrices, clearPrices } from '../actions/predictprices';\nimport PredictedChart from './PredictedChart';\n\nconst PredictStock = ({ predictPrices, clearPrices, predictprices: { x, y, loading}}) => {\n\n   const [ formData, setFormData ] = useState({\n      startDate: '',\n      endDate: '',\n   })\n\n   const [ predictPricesBlock, setPredictPricesBlock] = useState('none')\n\n   const { startDate, endDate } = formData;\n\n   const onChange = e => {\n      setFormData({...formData, [e.target.name]: e.target.value});\n   }\n\n   const onSubmit = e => {\n      e.preventDefault();\n      clearPrices()\n      predictPrices(startDate, endDate)\n      setPredictPricesBlock('block')\n   }\n\n   return (\n      <div>\n         <h5 style={{display: 'inline-block', marginRight: '2%'}}>Make a Prediction:</h5>\n         <small>Select a date in the future, works best for 100 days and less</small>\n         <form action=\"/action_page.php\">\n           <p>Start Date: <input\n             type=\"date\"\n             name=\"startDate\"\n             value={startDate}\n             onChange={e => onChange(e)}\n             required /></p>\n           <p>End Date: <input\n             type=\"date\"\n             name=\"endDate\"\n             value={endDate}\n             onChange={e => onChange(e)}\n             required /></p>\n             <button\n               class=\"button\"\n               style={{verticalAlign:'middle', marginBottom: '5%'}}\n               onClick={e => onSubmit(e)}\n               ><span>Submit</span></button>\n         </form>\n\n         <div style={{display: predictPricesBlock}}>\n            { !loading && x != null && y != null ? (<PredictedChart x={x} y={y} />) :(<div></div>)}\n         </div>\n\n      </div>\n   )\n}\n\nPredictStock.propTypes = {\n   predictprices: PropTypes.object.isRequired,\n   predictPrices: PropTypes.func.isRequired,\n   clearPrices: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n   predictprices: state.predictprices\n});\n\nexport default connect(mapStateToProps, { predictPrices, clearPrices })(PredictStock);\n"]},"metadata":{},"sourceType":"module"}